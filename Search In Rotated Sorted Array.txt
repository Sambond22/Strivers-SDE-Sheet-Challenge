int bs(int* arr,int n,int ind,int target){
     int st=ind,end=n-1;
     
        while(st<=end){
        int mid=(st+end)/2;
               if(arr[mid]==target){
                   return mid;
               }
               else if(arr[mid]>target){
                   end=mid-1;
               }
               else{
                   st=mid+1;
               }
        }
        return -1;
        
}   
int bss(int* arr,int ind,int target){
     int st=0,end=ind;
     
        while(st<=end){
        int mid=(st+end)/2;
               if(arr[mid]==target){
                   return mid;
               }
               else if(arr[mid]>target){
                   end=mid-1;
               }
               else{
                   st=mid+1;
               }
        }
        return -1;
        
}  
int search(int* arr, int n, int key) {
    // Write your code here.
    int target=key;
           
        int st=0,end=n-1;
        int mid;
        int x=0;
        while(st<=end){
            mid=st+(end-st)/2;
         int prev=(mid+n-1)%n, next=(mid+1)%n;
         if(arr[mid]<arr[next]&& arr[mid]<arr[prev]){
             x=mid;
             break;
         }
         else if(arr[st]<arr[end]){
             x=st;
             break;
         }
         else if(arr[st]<=arr[mid]){
             st=mid+1;
         }
         else if(arr[mid]<=arr[end]){
             end=mid-1;
         }
          
          }
        
        
          if(target==arr[x]){
              return x;
          }
          int firs=bs(arr,n,x,target);
          int sec=bss(arr,x-1,target);
        
          return max(firs,sec);
        
    return -1;

}


 